# wandbox-builder の特殊な仕様:
# - ファイル名は必ず build*.yml にする
# - name は必須
# - ジョブ名は ga-build/ のディレクトリ名と合わせる
# - ビルドと関係ないジョブを作る場合はジョブ名の先頭に _ を付ける

name: build
on:
  push:

env:
  ASSETS_URL: "https://api.github.com/repos/melpon/wandbox-builder/releases/32402124/assets"
  UPLOAD_URL: "https://uploads.github.com/repos/melpon/wandbox-builder/releases/32402124/assets{?name,label}"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  _asset:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - run: |
          pip3 install requests
          python3 get_asset_info.py ${{ env.ASSETS_URL }} --github_token ${{ env.GITHUB_TOKEN }} > asset_info.json
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
  clisp:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 2.49
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  cpython:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.10.2
          - 3.9.3
          - 3.8.9
          - 3.7.10
          - 3.6.12
          - 2.7.18
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  crystal:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.0.0
          - 0.36.1
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  dmd:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 2.096.0
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  dotnetcore:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 5.0.201
          - 3.1.407
          - 2.1.814
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  elixir:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          # 対応する Erlang のバージョンは
          # https://hexdocs.pm/elixir/compatibility-and-deprecations.html#compatibility-between-elixir-and-erlang-otp
          # から探す。
          - 1.11.4 erlang 23.3.1
          - 1.10.4 erlang 23.3.1
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  erlang:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 23.3.1
          - 22.3.4.16
          - 21.3.8.22
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  fpc:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.2.0
          - 3.0.4
          - 2.6.4
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  ghc:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 9.0.1
          - 8.10.4
          - 8.8.4
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  go:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.16.3
          - 1.15.11
          - 1.14.15
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  julia:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.6.1
          - 1.0.5
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  lazyk:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - nover
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  ldc:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.25.1
          - 1.24.0
          - 1.23.0
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  lua:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 5.4.3
          - 5.3.6
          - 5.2.4
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  luajit:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 2.0.5
          - 2.0.4
          - 2.0.3
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  mono:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 6.12.0.122
          - 5.20.1.34
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  mruby:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.0.0
          - 2.1.2
          - 1.4.1
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  nim:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.6.12
          - 1.6.10
          - 1.6.8
          - 1.6.6
          - 1.6.4
          - 1.6.0
          - 1.4.8
          - 1.4.6
          - 1.2.8
          - 1.0.10
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  ocaml:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 4.12.0
          - 4.11.2
          - 4.10.2
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  openssl:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.1.1k
          - 1.0.2u
          - 0.9.8zh
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  perl:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 5.36.0
          - 5.34.0
          - 5.33.8
          - 5.32.1
          - 5.30.3
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  php:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 8.2.1
          - 8.1.14
          - 8.0.27
          - 7.4.16
          - 5.6.40
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  pony:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 0.39.1
          - 0.38.3
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  pypy:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.7-v7.3.4
          - 2.7-v7.3.4
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  r:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 4.0.5
          - 3.6.3
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  ruby:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.1.0
          - 3.0.1
          - 2.7.3
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  rust:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.69.0
          - 1.68.2
          - 1.67.1
          - 1.66.1
          - 1.65.0
          - 1.64.0
          - 1.63.0
          - 1.62.1
          - 1.61.0
          - 1.60.0
          - 1.59.0
          - 1.58.1
          - 1.57.0
          - 1.56.1
          - 1.55.0
          - 1.54.0
          - 1.53.0
          - 1.52.1
          - 1.51.0
          - 1.50.0
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  sbcl:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 2.1.3
          - 1.5.9
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  spidermonkey:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 88.0.0
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  sqlite:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.35.5
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  swift:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 5.3.3
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  vim:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 8.2.2811
          - 8.1.2424
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  zig:
    needs: [_asset]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 0.9.1
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: asset_info.json
          path: asset_info.json
      - id: setup
        run: ./ga-build/${{ github.job }}/run.sh setup ${{ matrix.version }}
      - id: install
        if: steps.setup.outputs.need_install == 'true'
        run: ./ga-build/${{ github.job }}/run.sh install ${{ matrix.version }}
      - uses: actions/upload-release-asset@v1
        if: steps.setup.outputs.need_install == 'true'
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ steps.install.outputs.package_path }}
          asset_name: ${{ steps.install.outputs.package_filename }}
          asset_content_type: application/gzip
  _deploy:
    needs:
      - clisp
      - cpython
      - crystal
      - dmd
      - dotnetcore
      - elixir
      - erlang
      - fpc
      - ghc
      - go
      - julia
      - lazyk
      - ldc
      - lua
      - luajit
      - mono
      - mruby
      - nim
      - ocaml
      - openssl
      - perl
      - php
      - pony
      - pypy
      - r
      - ruby
      - rust
      - sbcl
      - spidermonkey
      - sqlite
      - swift
      - vim
      - zig
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      # SSH 秘密鍵の登録
      - name: Register SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p $HOME/.ssh
          echo "$SSH_PRIVATE_KEY" > $HOME/.ssh/id_ed25519
          chmod 600 $HOME/.ssh/id_ed25519
      # デプロイ先を設定する
      - name: Add SSH config
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          echo "Host wandbox" >> $HOME/.ssh/config
          echo "    HostName $SSH_HOST" >> $HOME/.ssh/config
          echo "    User $SSH_USER" >> $HOME/.ssh/config
          echo "    ServerAliveInterval 60" >> $HOME/.ssh/config
          echo "    TCPKeepAlive yes" >> $HOME/.ssh/config
          ssh-keyscan -H $SSH_HOST >> $HOME/.ssh/known_hosts
      # ソースをデプロイ先にコピーして、デプロイスクリプトを実行する
      - id: deploy
        name: Deploy
        run: |
          set -ex
          COMMIT=`git log --format=%as.%h -n 1 HEAD`
          ssh wandbox 'mkdir -p /opt/wandbox-data'
          rsync -a -v . wandbox:/opt/wandbox-data/wandbox-builder
          ssh wandbox "python3 /opt/wandbox-data/wandbox-builder/deploy.py $GITHUB_WORKFLOW $COMMIT ${{ env.ASSETS_URL }} --github_token ${{ env.GITHUB_TOKEN }}"
      - name: Generate Configuration
        if: steps.deploy.outputs.deployed == 'true'
        run: |
          ssh wandbox 'mkdir -p /opt/wandbox-data/release/cattleshed-conf'
          ssh wandbox 'python3 /opt/wandbox-data/wandbox-builder/cattleshed-conf/compilers.py > /opt/wandbox-data/release/cattleshed-conf/compilers.default'
      - name: Restart Cattleshed
        if: steps.deploy.outputs.deployed == 'true'
        run: |
          ssh wandbox 'systemctl restart cattleshed-master'
          ssh wandbox 'systemctl restart cattleshed-develop'
          sleep 30
      - name: Restart Kennel
        if: steps.deploy.outputs.deployed == 'true'
        run: |
          ssh wandbox 'systemctl restart kennel-master'
          ssh wandbox 'systemctl restart kennel-develop'
